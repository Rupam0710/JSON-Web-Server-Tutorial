1. What is JSON server and why is it required ?

ans. 
a. JSON Server is an npm package that lets you create fake Rest APIs with zero coding.
b. As a front end developer, I constantly need mock data that I can use to quickly prototype front end components.
c. Data should be fetched asychronously and the APIs should support not just GET but also POST, PUT and DELETE requests.
d. Creating a node + express + mongodb backend is a pretty time consuming.

2. What are the steps to create a JSON server?

ans.
a. Create a package.json file in project folder - npm init -y.
b. Install the json server package - yarn add json-server  or     npm install json-server.
c. Add a new script to start the server - 
   in scripts in package.json file we will add - "serve-json":"json-server --watch db.json" 

3. How to run the json-server?

ans.  npm run serve-json   or     yarn serve-json.

4. How to get request from json-server?

ans. We can navigate to 
localhost:3000/(array of objects name) : for getting all the values
localhost:3000/(array of objects name)/(id) : for getting specific values.

5.How to filter data from json-server?

ans.
localhost:3000/(array of objects name)?(category_name=filterValue) - for simple filtering
localhost:3000/(array of objects name)?(category_name=filterValue)&(category_name).(deepValue)=(filterValue)

ex: localhost:3000/products?category=electronics&discount.type=shipping

6.How to sort data in json-server?

ans.
localhost:3000/(array of objects name)?_sort=(category_name)  -> ascending order
ex: localhost:3000/products?_sort=price

localhost:3000/(array of objects name)?_sort=(category_name)&_order=desc  ->  descending order
ex: localhost:3000/products?_sort=price&_order=desc 

localhost:3000/(array of objects name)?_sort=(category_name),(2nd category_name)&_order=desc,(2nd_category order)  -> multiple fields sorting
ex: localhost:3000/products?_sort=price,category&_order=desc,asc

7. How to set Pagination to json-server?

ans.
localhost:3000/(array of objects name)?_page=(pageNumber) -> for vieiwng the data of page 1
ex: localhost:3000/products?_page=1 


localhost:3000/(array of objects name)?_page=(pageNumber)&_limit=(limitValue) -> for vieiwng the data of page 1 where no of the values displayed will be limitValue
ex: localhost:3000/products?_page=1&_limit=2 

8. How to display a value based on a range for example price in json-server?

ans.
localhost:3000/(array of objects name)?(category_name)_gte=(value)&(category_name)_lte=(value)   ->
to display the details whose value is given with that certain range.
gte - greater than equal
lte - lesser than equal

ex: localhost:3000/products?price_gte=2000&price_lte=6000


9. How to display a value that is not eaul to a certain value in json-server?

ans.
localhost:3000/(array of objects name)?(category_name)_ne=(value)
ne - not equal 

 localhost:3000/products?id_ne=1


10. How to use regex to filter data in json-server?

ans.
localhost:3000/(array of objects name)?(category_name)_like=(value)

 localhost:3000/products?category_like=^f   ->  It filters all the products that starts with f

 11. How to perform full text search in json-server?

 ans.
 localhost:3000/(array of objects name)?q=(value)

  localhost:3000/products?q=in


12. How can we have a relationship between parent and the child review served as a part of the api?
    How the child resources can be fetched?
ans. 

 localhost:3000/(array of objects parent)?_embed=((array of objects child))
 localhost:3000/products?_embed=reviews

 13. How can the parent resources be fetched?

 ans.
  localhost:3000/(array of objects child)?expand=((array of objects parent)) -> parent will be singular
 localhost:3000/reviews?_expand=product


13. How to post a request to db.json?

ans. 
a. Open ThunderClient extension in VS code , then click on new request.
b. Select POST option and then use http://[::1]:3000/products to post data to the product.
c. In the body , enter the content you want to add.
    {
      "id": 111,
      "title": "Unique 111",
      "category": "electronics",
      "price": 4000,
      "description": "This is description about product 111"
    }

14. Why is it showing connection is refused by the server whenever we are using post in ThunderClient and what should we use to overcome it?

ans.
localhost is not exposed to ThunderClient, but [::1] works uniformly in npm/pnpm/bun without the --host option.

so oddly this is the easiest and best answer at this time.
 http://[::1]:3000

 Note: 
The URL "http://[::1]:3000/products" appears to be a local address using IPv6 loopback notation. Specifically, "::1" is the IPv6 loopback address, which is equivalent to the IPv4 loopback address "127.0.0.1". The port number "3000" is commonly used for web development servers.

15. How to set request in json-server?

ans.
Set Request Method:

In the request details, select "PUT" as the HTTP method. This is the method used for updating or creating a resource on the server. We have to write the entire object to make the changes.

PUT:    http://[::1]:3000/products/111

JSON :
 {
      "id": 111,
      "title": "Unique 111",
      "category": "software",
      "price": 4000,
      "description": "This is description about product 111"
}

Response :

 {
  "id": 111,
  "title": "Unique 111",
  "category": "software",
  "price": 4000,
  "description": "This is description about product 111"
}


PATCH :
Choose the Request Method: Look for a dropdown or some other option to select the HTTP method. There should be options like GET, POST, PUT, DELETE, and hopefully PATCH.

Select PATCH: If the PATCH method is available, select it from the dropdown or the relevant option.

Configure Request: Fill in the necessary details for your PATCH request, including the URL, headers, request body, and any other parameters.

Send the Request: Use the option provided to send the PATCH request.

In PATCH , we only have to use the property that we want to change.

http://[::1]:3000/products/111
 
JSON Content: 
 {
      
      "price": 7000
      
 }

 Response :

 {
  "id": 111,
  "title": "Unique 111",
  "category": "software",
  "price": 7000,
  "description": "This is description about product 111"
}


16. How do you want to delete a data in json-server?

ans. 
DELETE : 

In most API testing tools, including ThunderClient, you would typically use the HTTP method "DELETE" when you want to request the removal of a resource on the server. Here's a general overview of how you might use the "DELETE" method in ThunderClient:

Open ThunderClient.
Create a new request or open an existing one.
Set the request method to "DELETE."
Enter the URL of the resource you want to delete.
Add any necessary headers or parameters.
Send the request.


DELETE : http://[::1]:3000/products/111

JSON :  


Response : {}

17. To make realistic data we can use 

a. Faker - https://github.com/faker-js/faker
b. Casual - https://github.com/boo1ean/casual
c. ChanceJS - https://github.com/chancejs/chancejs

